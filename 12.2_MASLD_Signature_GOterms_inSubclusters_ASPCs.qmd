---
title: "Fisher enrichment test of MASLD signature genes in subcluster markergenes, ASPCs"
author: "Johanne D. Madsen"
format: html
editor: visual
---

```{r}
require(openxlsx)
library(clusterProfiler)
library(readxl)
library(org.Hs.eg.db)
library(tidytable)
library(purrr)
library(dplyr)
library(textshape)
library(pheatmap)
```

```{r}

ASPCsMarkers <- read_excel("/work/without_ambientRNAremoval/data/DElists/ASPCsMarkers.xlsx")

extract_top_genes_by_cluster <- function(df, top_n = 200) {
  unique_clusters <- unique(df$cluster)
  
  for (cluster in unique_clusters) {
    # Step 1: Subset by cluster
    cluster_genes <- df[df$cluster == cluster, ]

    # Step 2: Order by adjusted p-value
    cluster_genes <- cluster_genes[order(cluster_genes$p_val_adj), ]

    # Step 3: Extract top N gene names
    top_genes <- head(cluster_genes$gene, top_n)

    # Clean cluster name for variable (remove "+" if present)
    cluster_clean <- gsub("\\+", "", cluster)

    # Create variable name (e.g., DPP4_genes)
    var_name <- paste0(cluster_clean, "_genes")

    # Assign to global environment
    assign(var_name, top_genes, envir = .GlobalEnv)
  }
}



extract_top_genes_by_cluster(ASPCsMarkers)

```

```{r}
#Extracting full genesets for the top 5 GOterms for each signature

GOgenes_ASPC_S12_ID <-ego_simplified_ASPC_S12@geneSets[names(ego_simplified_ASPC_S12@geneSets) %in% top5_ASPC_S12$ID]

GOgenes_ASPC_S12_ID_ordered<-GOgenes_ASPC_S12_ID[top5_ASPC_S12$ID]

names(GOgenes_ASPC_S12_ID_ordered)<-top5_ASPC_S12$Description

GOgenes_ASPC_S12_list <- GOgenes_ASPC_S12_ID_ordered

#

GOgenes_ASPC_S3_ID <-ego_simplified_ASPC_S3@geneSets[names(ego_simplified_ASPC_S3@geneSets) %in% top5_ASPC_S3$ID]

GOgenes_ASPC_S3_ID_ordered<-GOgenes_ASPC_S3_ID[top5_ASPC_S3$ID]

names(GOgenes_ASPC_S3_ID_ordered)<-top5_ASPC_S3$Description

GOgenes_ASPC_S3_list <- GOgenes_ASPC_S3_ID_ordered



```

```{r}
run_fisher_enrichment <- function(go_list, test_genes, background_genes) {
  results <- lapply(names(go_list), function(go_term) {
    go_genes <- go_list[[go_term]]
    # Ensure we're working within the background only
    go_genes <- intersect(go_genes, background_genes)
    test_genes_bg <- intersect(test_genes, background_genes)

    # Build contingency table
    A <- length(intersect(test_genes_bg, go_genes))
    B <- length(setdiff(test_genes_bg, go_genes))
    C <- length(setdiff(go_genes, test_genes_bg))
    D <- length(setdiff(background_genes, union(go_genes, test_genes_bg)))

    contingency <- matrix(c(A, B, C, D), nrow = 2, byrow = TRUE)
    ft <- fisher.test(contingency)

    data.frame(
      GO_term = go_term,
      p_value = ft$p.value,
      odds_ratio = ft$estimate,
      overlap = A,
      GO_size = length(go_genes),
      test_set_size = length(test_genes_bg),
      gene_ratio = A / length(go_genes)
    )
  })

  # Combine into a single data.frame and adjust p-values
  results_df <- do.call(rbind, results)
  results_df$adj_p_value <- p.adjust(results_df$p_value, method = "BH")
  results_df <- results_df[order(results_df$adj_p_value), ]
  return(results_df)
}

```

```{r}
gene_sets <- list(
  PLAU = PLAU_genes,
  DPP4 = DPP4_genes,
  CXCL14 = CXCL14_genes,
  EPHA3 = EPHA3_genes,
  PPARG = PPARG_genes
)

go_lists <- list(
  ASPC_S12 = GOgenes_ASPC_S12_list,
  ASPC_S3 = GOgenes_ASPC_S3_list
)

```

```{r}
all_results <- list()

for (Celltype in names(gene_sets)) {
  for (go_label in names(go_lists)) {
    result <- run_fisher_enrichment(go_lists[[go_label]], gene_sets[[Celltype]], background_list_ASPCs)
    result$Celltype <- Celltype
    result$GOsource <- go_label
    all_results[[paste(Celltype, go_label, sep = "_")]] <- result
  }
}

# Combine into one dataframe
combined_results <- do.call(rbind, all_results)

```

```{r, fig.width=10}
library(ggplot2)

combined_results
# Combine GO term order while tagging source

# Remove leading/trailing whitespace from GO term names
go_term_order <- c(
  paste0("ASPC_S12__", trimws(names(GOgenes_ASPC_S12_list))),
  paste0("ASPC_S3__", trimws(names(GOgenes_ASPC_S3_list)))
)


combined_results$GO_combined <- paste(combined_results$GOsource, combined_results$GO_term, sep = "__")

# Factor with correct order
combined_results$GO_combined <- factor(combined_results$GO_combined, levels = rev(go_term_order))

my_levels <- c("DPP4","CXCL14","PPARG","EPHA3","PLAU")

combined_results$Celltype <- factor(combined_results$Celltype, levels = my_levels)

pdf("/work/without_ambientRNAremoval/figures/GO_ASPC_signatures.pdf", width = 10, height=7)

ggplot(combined_results, aes(x = Celltype, y = GO_combined)) +
  geom_point(aes(size = gene_ratio, color = -log10(adj_p_value)))  +
  scale_color_gradientn(
    colors = c("white", "tomato", "firebrick"),
    values = scales::rescale(c(0, 2, max(-log10(combined_results$adj_p_value), na.rm = TRUE))),
    limits = c(0, max(-log10(combined_results$adj_p_value), na.rm = TRUE))
  )+
  theme_minimal() +
  labs(
    title = "GO Term Enrichment Dotplot",
    x = "",
    y = "GO Term",
    size = "Gene ratio",
    color = "-log10(adj_p_value)"
  )

dev.off()
combined_results$adj_p_value
```
