---
title: "Reclustering of cleaned subsetted object and annotation"
author: "Johanne D. Madsen"
date: '`r Sys.Date()`'
format:
  html:
    embed-resources: true
execute: 
  echo: false
  warning: false
---

```{r setup}

library(dplyr)
library(Seurat)
library(patchwork)
library(qs)
library(harmony)
library(ggplot2)
#Myeloid_cells_common<-qread("/work/without_ambientRNAremoval/data/Myeloid_cells_common_clean.qs")
Myeloid_cells_common<-qread("/work/without_ambientRNAremoval/data/Myeloid_cells_common_Annotated.qs")
#qsave(Myeloid_cells_common,"/work/without_ambientRNAremoval/data/Myeloid_cells_common_Annotated.qs")
```

```{r}

Myeloid_cells_donor_list <- Myeloid_cells_common %>%
  SplitObject(split.by = "Donor")


# 2. LogNormalize RNA data
Myeloid_cells_donor_list <- lapply(Myeloid_cells_donor_list, function(seurat_obj){
  output <- Seurat::NormalizeData(seurat_obj,
                                  assay = "RNA",
                                  verbose = TRUE)
  return(output)
})



Myeloid_cells_common <- purrr::reduce(Myeloid_cells_donor_list, merge)
DefaultAssay(Myeloid_cells_common) <- "RNA"

Myeloid_cells_common<-Seurat::FindVariableFeatures(Myeloid_cells_common,
                                  assay = "RNA",
                                  verbose = TRUE)

 
Myeloid_cells_common <- ScaleData(Myeloid_cells_common, split.by="Donor")



Myeloid_cells_common <- Myeloid_cells_common %>%
  RunPCA(seed.use = 1000,
         verbose = TRUE)
```


```{r}
Myeloid_cells_common <- Myeloid_cells_common %>%
  harmony::RunHarmony(
    group.by.vars = "Pool",
    assay.use = 'RNA',
    reduction.save = 'harmony.pca.RNA',
    project.dim = F,
    kmeans_init_nstart=20,
    kmeans_init_iter_max=100
  )

# UMAP
Myeloid_cells_common <- Myeloid_cells_common %>%
  Seurat::RunUMAP(
    dims = 1:20,
    reduction = 'harmony.pca.RNA',
    reduction.name = 'umap.rna',
    reduction.key = 'rnaUMAP_',
    seed.use = 1000,
    verbose = TRUE)

```

```{r}
Myeloid_cells_common <- Myeloid_cells_common %>%
  Seurat::FindNeighbors(reduction = "harmony.pca.RNA",
                        dims = 1:20, compute.SNN = TRUE)%>% 
  Seurat::FindNeighbors(reduction = "harmony.pca.RNA",
                        dims = 1:20, return.neighbor = TRUE)
#Do twice. Once with compute.SNN = TRUE, once with return.neighbor = TRUE. Can't run both


# Run UMAP dimensional reduction based on WNN
Myeloid_cells_common <- Myeloid_cells_common %>%
  RunUMAP(
    nn.name = "RNA.nn",
    reduction.name = "umap.snn",
    reduction.key = "snnUMAP_",
    seed.use = 1000)

# Cluster determination
Myeloid_cells_common <- Myeloid_cells_common %>%
  FindClusters(
    graph.name = "RNA_snn",
    algorithm = 3,
    res =0.2,
    random.seed = 1000,
    verbose = TRUE
  )

```


```{r}


snn_dim <- DimPlot(Myeloid_cells_common,
                   reduction = 'umap.snn',
                   label.size = 3,
                   label = TRUE)

snn_harmony <- DimPlot(Myeloid_cells_common,
                       reduction = 'umap.snn',
                       group.by = "Pool",
                       label.size = 3)
snn_saf <- DimPlot(Myeloid_cells_common,
                       reduction = 'umap.snn',
                       group.by = "saf",
                       label.size = 3)
snn_donor <- DimPlot(Myeloid_cells_common,
                       reduction = 'umap.snn',
                       group.by = "Donor",
                       label.size = 3, split.by = "saf")
snn_splitsaf<-DimPlot(Myeloid_cells_common, reduction = 'umap.snn',
                       label.size = 3, split.by = "saf")
snn_dim 
snn_harmony
snn_saf
snn_donor
snn_splitsaf

```


```{r}
Myeloid.markers <- FindAllMarkers(Myeloid_cells_common, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
Myeloid.markers %>%
    group_by(cluster) %>%
    slice_max(n = 2, order_by = avg_log2FC)

Myeloid.markers %>%
    group_by(cluster) %>%
    top_n(n = 10, wt = avg_log2FC) -> top10


Myeloid_cells_heatmap<-DoHeatmap(Myeloid_cells_common, features = top10$gene) + NoLegend()

Myeloid_cells_heatmap

write.xlsx(Myeloid.markers, file = "/work/without_ambientRNAremoval/data/DElists/MyeloidMarkers.xlsx",
          colNames = T, rowNames = T)
```


```{r,fig.width=10, fig.height=5}
Myeloid_markers<-c("LYVE1","TTN","MAF","IGF1","CCDC141","DAAM2","FCN1","VCAN","SORL1","CLEC12A","SPP1","TIMP3","TREM2","LPL","CYP27A1","APOE","ITGA3","APOC1","FTL","CFD","TMSB4X","ACTG1" ,"CD1C","FCER1A","CD2","IL1R2","CX3CR1","SYTL1","TCF7L2","SPN","LAMP3","CCR7","ADAM12","BICDL1","CLNK","NCALD","CLEC9A","KCND3","CLEC4C","PACSIN1","MZB1","GZMB") 
DotPlot(Myeloid_cells_common,features = Myeloid_markers)+theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
```


```{r}
new_names <- c("ATM","LAM","classical Monocytes","cDC2 (CDC1c+)","non-classical Monocytes", "cDC1","cDC2 (CCR7+)")



names(new_names) <- levels(Myeloid_cells_common)


Myeloid_cells_common <- RenameIdents(object =Myeloid_cells_common, new_names)
snn_ann<-DimPlot(Myeloid_cells_common,reduction = 'umap.snn', label = TRUE) + NoLegend()
snn_ann

```


```{r}
Myeloid_cells_common@meta.data$seurat_clusters

Myeloid_cells_common$Label <- 1
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$seurat_clusters == "0","Label"] <- 1 
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$seurat_clusters == "1","Label"] <- 2
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$seurat_clusters == "2","Label"] <- 3
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$seurat_clusters == "3","Label"] <- 4
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$seurat_clusters == "4","Label"] <- 5
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$seurat_clusters == "5","Label"] <- 6 
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$seurat_clusters == "6","Label"] <- 7

Myeloid_cells_common@meta.data$Label <- factor(x = Myeloid_cells_common$Label, levels = c("1", "2", "3", "4","5","6","7"))
Myeloid_cells_common <- SetIdent(Myeloid_cells_common, value = Myeloid_cells_common$Label) #Sets the identity class value for cells


## Fix cluster labels
Myeloid_cells_common$Annotation <- "NA"
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$Label %in% 1,"Annotation"] <- "ATM" 
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$Label %in% 2,"Annotation"] <- "LAM"
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$Label %in% 3,"Annotation"] <- "classical Monocytes"
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$Label %in% 4,"Annotation"] <- "cDC2 (CDC1c+)"
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$Label %in% 5,"Annotation"] <- "non-classical Monocytes"
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$Label %in% 6,"Annotation"] <- "cDC1"
Myeloid_cells_common@meta.data[ Myeloid_cells_common@meta.data$Label %in% 7,"Annotation"] <- "cDC2 (CCR7+)"


Myeloid_cells_common@meta.data$Label <- factor(x = Myeloid_cells_common$Label, levels = c("ATM","LAM","classical Monocytes","cDC2 (CDC1c+)","non-classical Monocytes", "cDC1","cDC2 (CCR7+)"))

Myeloid_cells_common <- SetIdent(Myeloid_cells_common, value = Myeloid_cells_common$Annotation) #Sets the identity class value for cells

snn_ann<-DimPlot(Myeloid_cells_common,reduction = 'umap.snn', label = TRUE) + NoLegend()
snn_ann


```







